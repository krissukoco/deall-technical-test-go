name: Test and Deploy to VM
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
env:
  ENV: dev
  HOST: ${{ secrets.HOST }}
  USERNAME: ${{ secrets.USERNAME }}
  KEY: ${{ secrets.SSH_KEY }}
  DIR_NAME: ${{ secrets.DIR_NAME }}
  POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
  POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
  POSTGRES_DB: ${{ secrets.POSTGRES_DB }}

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.20.x'
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Test
        run: go test ./...

  deploy:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      
      - name: Deploy to VM
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.HOST }}
          username: ${{ env.USERNAME }}
          key: ${{ env.KEY }}
          script: |
            cd ~/${{ env.DIR_NAME }}
            echo "Pulling from main branch"
            git checkout main
            git pull

            echo "Copying config file"
            echo "${{ secrets.PROD_CONFIG }}" > config/prod.yaml

            echo "Replace secrets to docker compose file"
            sed -i "s/<POSTGRES_USER>/${{ env.POSTGRES_USER }}/g" docker-compose-prod.yaml
            sed -i "s/<POSTGRES_PASSWORD>/${{ env.POSTGRES_PASSWORD }}/g" docker-compose-prod.yaml
            sed -i "s/<POSTGRES_DB>/${{ env.POSTGRES_DB }}/g" docker-compose-prod.yaml

            docker compose -f docker-compose-prod.yaml down
            docker compose -f docker-compose-prod.yaml up -d --build
            echo "Deployed to VM"
            

